// This file was generated by the following script:
//
//   $ ../../tools/tzcompiler.py --input_dir /home/brian/dev/tz --output_dir /home/brian/dev/AceTime/tests/ExtendedValidationTest --tz_version 2018i --unittest --arduinox
//
// using the TZ Database files from
// https://github.com/eggert/tz/releases/tag/2018i
//
// DO NOT EDIT

#include <AUnit.h>
#include "TransitionTest.h"
#include "validation_data.h"

// numZones: 348
testF(TransitionTest, Abidjan) {
  assertValid(&ace_time::zonedbx::kValidationDataAbidjan);
}
testF(TransitionTest, Accra) {
  assertValid(&ace_time::zonedbx::kValidationDataAccra);
}
testF(TransitionTest, Adak) {
  assertValid(&ace_time::zonedbx::kValidationDataAdak);
}
testF(TransitionTest, Adelaide) {
  assertValid(&ace_time::zonedbx::kValidationDataAdelaide);
}
testF(TransitionTest, Algiers) {
  assertValid(&ace_time::zonedbx::kValidationDataAlgiers);
}
testF(TransitionTest, Almaty) {
  assertValid(&ace_time::zonedbx::kValidationDataAlmaty);
}
testF(TransitionTest, Amman) {
  assertValid(&ace_time::zonedbx::kValidationDataAmman);
}
testF(TransitionTest, Amsterdam) {
  assertValid(&ace_time::zonedbx::kValidationDataAmsterdam);
}
testF(TransitionTest, Anadyr) {
  assertValid(&ace_time::zonedbx::kValidationDataAnadyr);
}
testF(TransitionTest, Anchorage) {
  assertValid(&ace_time::zonedbx::kValidationDataAnchorage);
}
testF(TransitionTest, Andorra) {
  assertValid(&ace_time::zonedbx::kValidationDataAndorra);
}
testF(TransitionTest, Apia) {
  assertValid(&ace_time::zonedbx::kValidationDataApia);
}
testF(TransitionTest, Aqtau) {
  assertValid(&ace_time::zonedbx::kValidationDataAqtau);
}
testF(TransitionTest, Aqtobe) {
  assertValid(&ace_time::zonedbx::kValidationDataAqtobe);
}
testF(TransitionTest, Araguaina) {
  assertValid(&ace_time::zonedbx::kValidationDataAraguaina);
}
testF(TransitionTest, Ashgabat) {
  assertValid(&ace_time::zonedbx::kValidationDataAshgabat);
}
testF(TransitionTest, Astrakhan) {
  assertValid(&ace_time::zonedbx::kValidationDataAstrakhan);
}
testF(TransitionTest, Asuncion) {
  assertValid(&ace_time::zonedbx::kValidationDataAsuncion);
}
testF(TransitionTest, Athens) {
  assertValid(&ace_time::zonedbx::kValidationDataAthens);
}
testF(TransitionTest, Atikokan) {
  assertValid(&ace_time::zonedbx::kValidationDataAtikokan);
}
testF(TransitionTest, Atyrau) {
  assertValid(&ace_time::zonedbx::kValidationDataAtyrau);
}
testF(TransitionTest, Auckland) {
  assertValid(&ace_time::zonedbx::kValidationDataAuckland);
}
testF(TransitionTest, Azores) {
  assertValid(&ace_time::zonedbx::kValidationDataAzores);
}
testF(TransitionTest, Baghdad) {
  assertValid(&ace_time::zonedbx::kValidationDataBaghdad);
}
testF(TransitionTest, Bahia) {
  assertValid(&ace_time::zonedbx::kValidationDataBahia);
}
testF(TransitionTest, Bahia_Banderas) {
  assertValid(&ace_time::zonedbx::kValidationDataBahia_Banderas);
}
testF(TransitionTest, Baku) {
  assertValid(&ace_time::zonedbx::kValidationDataBaku);
}
testF(TransitionTest, Bangkok) {
  assertValid(&ace_time::zonedbx::kValidationDataBangkok);
}
testF(TransitionTest, Barbados) {
  assertValid(&ace_time::zonedbx::kValidationDataBarbados);
}
testF(TransitionTest, Barnaul) {
  assertValid(&ace_time::zonedbx::kValidationDataBarnaul);
}
testF(TransitionTest, Beirut) {
  assertValid(&ace_time::zonedbx::kValidationDataBeirut);
}
testF(TransitionTest, Belem) {
  assertValid(&ace_time::zonedbx::kValidationDataBelem);
}
testF(TransitionTest, Belgrade) {
  assertValid(&ace_time::zonedbx::kValidationDataBelgrade);
}
testF(TransitionTest, Belize) {
  assertValid(&ace_time::zonedbx::kValidationDataBelize);
}
testF(TransitionTest, Berlin) {
  assertValid(&ace_time::zonedbx::kValidationDataBerlin);
}
testF(TransitionTest, Bermuda) {
  assertValid(&ace_time::zonedbx::kValidationDataBermuda);
}
testF(TransitionTest, Beulah) {
  assertValid(&ace_time::zonedbx::kValidationDataBeulah);
}
testF(TransitionTest, Bishkek) {
  assertValid(&ace_time::zonedbx::kValidationDataBishkek);
}
testF(TransitionTest, Bissau) {
  assertValid(&ace_time::zonedbx::kValidationDataBissau);
}
testF(TransitionTest, Blanc_Sablon) {
  assertValid(&ace_time::zonedbx::kValidationDataBlanc_Sablon);
}
testF(TransitionTest, Boa_Vista) {
  assertValid(&ace_time::zonedbx::kValidationDataBoa_Vista);
}
testF(TransitionTest, Bogota) {
  assertValid(&ace_time::zonedbx::kValidationDataBogota);
}
testF(TransitionTest, Boise) {
  assertValid(&ace_time::zonedbx::kValidationDataBoise);
}
testF(TransitionTest, Bougainville) {
  assertValid(&ace_time::zonedbx::kValidationDataBougainville);
}
testF(TransitionTest, Brisbane) {
  assertValid(&ace_time::zonedbx::kValidationDataBrisbane);
}
testF(TransitionTest, Broken_Hill) {
  assertValid(&ace_time::zonedbx::kValidationDataBroken_Hill);
}
testF(TransitionTest, Brunei) {
  assertValid(&ace_time::zonedbx::kValidationDataBrunei);
}
testF(TransitionTest, Brussels) {
  assertValid(&ace_time::zonedbx::kValidationDataBrussels);
}
testF(TransitionTest, Bucharest) {
  assertValid(&ace_time::zonedbx::kValidationDataBucharest);
}
testF(TransitionTest, Budapest) {
  assertValid(&ace_time::zonedbx::kValidationDataBudapest);
}
testF(TransitionTest, Buenos_Aires) {
  assertValid(&ace_time::zonedbx::kValidationDataBuenos_Aires);
}
testF(TransitionTest, Cairo) {
  assertValid(&ace_time::zonedbx::kValidationDataCairo);
}
testF(TransitionTest, Cambridge_Bay) {
  assertValid(&ace_time::zonedbx::kValidationDataCambridge_Bay);
}
testF(TransitionTest, Campo_Grande) {
  assertValid(&ace_time::zonedbx::kValidationDataCampo_Grande);
}
testF(TransitionTest, Canary) {
  assertValid(&ace_time::zonedbx::kValidationDataCanary);
}
testF(TransitionTest, Cancun) {
  assertValid(&ace_time::zonedbx::kValidationDataCancun);
}
testF(TransitionTest, Cape_Verde) {
  assertValid(&ace_time::zonedbx::kValidationDataCape_Verde);
}
testF(TransitionTest, Caracas) {
  assertValid(&ace_time::zonedbx::kValidationDataCaracas);
}
testF(TransitionTest, Casablanca) {
  assertValid(&ace_time::zonedbx::kValidationDataCasablanca);
}
testF(TransitionTest, Casey) {
  assertValid(&ace_time::zonedbx::kValidationDataCasey);
}
testF(TransitionTest, Catamarca) {
  assertValid(&ace_time::zonedbx::kValidationDataCatamarca);
}
testF(TransitionTest, Cayenne) {
  assertValid(&ace_time::zonedbx::kValidationDataCayenne);
}
testF(TransitionTest, Center) {
  assertValid(&ace_time::zonedbx::kValidationDataCenter);
}
testF(TransitionTest, Ceuta) {
  assertValid(&ace_time::zonedbx::kValidationDataCeuta);
}
testF(TransitionTest, Chagos) {
  assertValid(&ace_time::zonedbx::kValidationDataChagos);
}
testF(TransitionTest, Chatham) {
  assertValid(&ace_time::zonedbx::kValidationDataChatham);
}
testF(TransitionTest, Chicago) {
  assertValid(&ace_time::zonedbx::kValidationDataChicago);
}
testF(TransitionTest, Chihuahua) {
  assertValid(&ace_time::zonedbx::kValidationDataChihuahua);
}
testF(TransitionTest, Chisinau) {
  assertValid(&ace_time::zonedbx::kValidationDataChisinau);
}
testF(TransitionTest, Chita) {
  assertValid(&ace_time::zonedbx::kValidationDataChita);
}
testF(TransitionTest, Choibalsan) {
  assertValid(&ace_time::zonedbx::kValidationDataChoibalsan);
}
testF(TransitionTest, Christmas) {
  assertValid(&ace_time::zonedbx::kValidationDataChristmas);
}
testF(TransitionTest, Chuuk) {
  assertValid(&ace_time::zonedbx::kValidationDataChuuk);
}
testF(TransitionTest, Cocos) {
  assertValid(&ace_time::zonedbx::kValidationDataCocos);
}
testF(TransitionTest, Colombo) {
  assertValid(&ace_time::zonedbx::kValidationDataColombo);
}
testF(TransitionTest, Copenhagen) {
  assertValid(&ace_time::zonedbx::kValidationDataCopenhagen);
}
testF(TransitionTest, Cordoba) {
  assertValid(&ace_time::zonedbx::kValidationDataCordoba);
}
testF(TransitionTest, Costa_Rica) {
  assertValid(&ace_time::zonedbx::kValidationDataCosta_Rica);
}
testF(TransitionTest, Creston) {
  assertValid(&ace_time::zonedbx::kValidationDataCreston);
}
testF(TransitionTest, Cuiaba) {
  assertValid(&ace_time::zonedbx::kValidationDataCuiaba);
}
testF(TransitionTest, Curacao) {
  assertValid(&ace_time::zonedbx::kValidationDataCuracao);
}
testF(TransitionTest, Currie) {
  assertValid(&ace_time::zonedbx::kValidationDataCurrie);
}
testF(TransitionTest, Damascus) {
  assertValid(&ace_time::zonedbx::kValidationDataDamascus);
}
testF(TransitionTest, Danmarkshavn) {
  assertValid(&ace_time::zonedbx::kValidationDataDanmarkshavn);
}
testF(TransitionTest, Darwin) {
  assertValid(&ace_time::zonedbx::kValidationDataDarwin);
}
testF(TransitionTest, Davis) {
  assertValid(&ace_time::zonedbx::kValidationDataDavis);
}
testF(TransitionTest, Dawson) {
  assertValid(&ace_time::zonedbx::kValidationDataDawson);
}
testF(TransitionTest, Dawson_Creek) {
  assertValid(&ace_time::zonedbx::kValidationDataDawson_Creek);
}
testF(TransitionTest, Denver) {
  assertValid(&ace_time::zonedbx::kValidationDataDenver);
}
testF(TransitionTest, Detroit) {
  assertValid(&ace_time::zonedbx::kValidationDataDetroit);
}
testF(TransitionTest, Dhaka) {
  assertValid(&ace_time::zonedbx::kValidationDataDhaka);
}
testF(TransitionTest, Dili) {
  assertValid(&ace_time::zonedbx::kValidationDataDili);
}
testF(TransitionTest, Dubai) {
  assertValid(&ace_time::zonedbx::kValidationDataDubai);
}
testF(TransitionTest, Dublin) {
  assertValid(&ace_time::zonedbx::kValidationDataDublin);
}
testF(TransitionTest, DumontDUrville) {
  assertValid(&ace_time::zonedbx::kValidationDataDumontDUrville);
}
testF(TransitionTest, Dushanbe) {
  assertValid(&ace_time::zonedbx::kValidationDataDushanbe);
}
testF(TransitionTest, Easter) {
  assertValid(&ace_time::zonedbx::kValidationDataEaster);
}
testF(TransitionTest, Edmonton) {
  assertValid(&ace_time::zonedbx::kValidationDataEdmonton);
}
testF(TransitionTest, Efate) {
  assertValid(&ace_time::zonedbx::kValidationDataEfate);
}
testF(TransitionTest, Eirunepe) {
  assertValid(&ace_time::zonedbx::kValidationDataEirunepe);
}
testF(TransitionTest, El_Aaiun) {
  assertValid(&ace_time::zonedbx::kValidationDataEl_Aaiun);
}
testF(TransitionTest, El_Salvador) {
  assertValid(&ace_time::zonedbx::kValidationDataEl_Salvador);
}
testF(TransitionTest, Enderbury) {
  assertValid(&ace_time::zonedbx::kValidationDataEnderbury);
}
testF(TransitionTest, Eucla) {
  assertValid(&ace_time::zonedbx::kValidationDataEucla);
}
testF(TransitionTest, Fakaofo) {
  assertValid(&ace_time::zonedbx::kValidationDataFakaofo);
}
testF(TransitionTest, Famagusta) {
  assertValid(&ace_time::zonedbx::kValidationDataFamagusta);
}
testF(TransitionTest, Faroe) {
  assertValid(&ace_time::zonedbx::kValidationDataFaroe);
}
testF(TransitionTest, Fiji) {
  assertValid(&ace_time::zonedbx::kValidationDataFiji);
}
testF(TransitionTest, Fort_Nelson) {
  assertValid(&ace_time::zonedbx::kValidationDataFort_Nelson);
}
testF(TransitionTest, Fortaleza) {
  assertValid(&ace_time::zonedbx::kValidationDataFortaleza);
}
testF(TransitionTest, Funafuti) {
  assertValid(&ace_time::zonedbx::kValidationDataFunafuti);
}
testF(TransitionTest, Galapagos) {
  assertValid(&ace_time::zonedbx::kValidationDataGalapagos);
}
testF(TransitionTest, Gambier) {
  assertValid(&ace_time::zonedbx::kValidationDataGambier);
}
testF(TransitionTest, Gaza) {
  assertValid(&ace_time::zonedbx::kValidationDataGaza);
}
testF(TransitionTest, Gibraltar) {
  assertValid(&ace_time::zonedbx::kValidationDataGibraltar);
}
testF(TransitionTest, Glace_Bay) {
  assertValid(&ace_time::zonedbx::kValidationDataGlace_Bay);
}
testF(TransitionTest, Godthab) {
  assertValid(&ace_time::zonedbx::kValidationDataGodthab);
}
testF(TransitionTest, Goose_Bay) {
  assertValid(&ace_time::zonedbx::kValidationDataGoose_Bay);
}
testF(TransitionTest, Grand_Turk) {
  assertValid(&ace_time::zonedbx::kValidationDataGrand_Turk);
}
testF(TransitionTest, Guadalcanal) {
  assertValid(&ace_time::zonedbx::kValidationDataGuadalcanal);
}
testF(TransitionTest, Guam) {
  assertValid(&ace_time::zonedbx::kValidationDataGuam);
}
testF(TransitionTest, Guatemala) {
  assertValid(&ace_time::zonedbx::kValidationDataGuatemala);
}
testF(TransitionTest, Guayaquil) {
  assertValid(&ace_time::zonedbx::kValidationDataGuayaquil);
}
testF(TransitionTest, Guyana) {
  assertValid(&ace_time::zonedbx::kValidationDataGuyana);
}
testF(TransitionTest, Halifax) {
  assertValid(&ace_time::zonedbx::kValidationDataHalifax);
}
testF(TransitionTest, Havana) {
  assertValid(&ace_time::zonedbx::kValidationDataHavana);
}
//testF(TransitionTest, Hebron) {
//  assertValid(&ace_time::zonedbx::kValidationDataHebron);
//}
testF(TransitionTest, Helsinki) {
  assertValid(&ace_time::zonedbx::kValidationDataHelsinki);
}
testF(TransitionTest, Hermosillo) {
  assertValid(&ace_time::zonedbx::kValidationDataHermosillo);
}
testF(TransitionTest, Ho_Chi_Minh) {
  assertValid(&ace_time::zonedbx::kValidationDataHo_Chi_Minh);
}
testF(TransitionTest, Hobart) {
  assertValid(&ace_time::zonedbx::kValidationDataHobart);
}
testF(TransitionTest, Hong_Kong) {
  assertValid(&ace_time::zonedbx::kValidationDataHong_Kong);
}
testF(TransitionTest, Honolulu) {
  assertValid(&ace_time::zonedbx::kValidationDataHonolulu);
}
testF(TransitionTest, Hovd) {
  assertValid(&ace_time::zonedbx::kValidationDataHovd);
}
testF(TransitionTest, Indianapolis) {
  assertValid(&ace_time::zonedbx::kValidationDataIndianapolis);
}
testF(TransitionTest, Inuvik) {
  assertValid(&ace_time::zonedbx::kValidationDataInuvik);
}
testF(TransitionTest, Iqaluit) {
  assertValid(&ace_time::zonedbx::kValidationDataIqaluit);
}
testF(TransitionTest, Irkutsk) {
  assertValid(&ace_time::zonedbx::kValidationDataIrkutsk);
}
testF(TransitionTest, Istanbul) {
  assertValid(&ace_time::zonedbx::kValidationDataIstanbul);
}
testF(TransitionTest, Jakarta) {
  assertValid(&ace_time::zonedbx::kValidationDataJakarta);
}
testF(TransitionTest, Jamaica) {
  assertValid(&ace_time::zonedbx::kValidationDataJamaica);
}
testF(TransitionTest, Jayapura) {
  assertValid(&ace_time::zonedbx::kValidationDataJayapura);
}
testF(TransitionTest, Jerusalem) {
  assertValid(&ace_time::zonedbx::kValidationDataJerusalem);
}
testF(TransitionTest, Johannesburg) {
  assertValid(&ace_time::zonedbx::kValidationDataJohannesburg);
}
testF(TransitionTest, Juba) {
  assertValid(&ace_time::zonedbx::kValidationDataJuba);
}
testF(TransitionTest, Jujuy) {
  assertValid(&ace_time::zonedbx::kValidationDataJujuy);
}
testF(TransitionTest, Juneau) {
  assertValid(&ace_time::zonedbx::kValidationDataJuneau);
}
testF(TransitionTest, Kabul) {
  assertValid(&ace_time::zonedbx::kValidationDataKabul);
}
testF(TransitionTest, Kaliningrad) {
  assertValid(&ace_time::zonedbx::kValidationDataKaliningrad);
}
testF(TransitionTest, Kamchatka) {
  assertValid(&ace_time::zonedbx::kValidationDataKamchatka);
}
testF(TransitionTest, Karachi) {
  assertValid(&ace_time::zonedbx::kValidationDataKarachi);
}
testF(TransitionTest, Kathmandu) {
  assertValid(&ace_time::zonedbx::kValidationDataKathmandu);
}
testF(TransitionTest, Kerguelen) {
  assertValid(&ace_time::zonedbx::kValidationDataKerguelen);
}
testF(TransitionTest, Khandyga) {
  assertValid(&ace_time::zonedbx::kValidationDataKhandyga);
}
testF(TransitionTest, Khartoum) {
  assertValid(&ace_time::zonedbx::kValidationDataKhartoum);
}
testF(TransitionTest, Kiev) {
  assertValid(&ace_time::zonedbx::kValidationDataKiev);
}
testF(TransitionTest, Kiritimati) {
  assertValid(&ace_time::zonedbx::kValidationDataKiritimati);
}
testF(TransitionTest, Kirov) {
  assertValid(&ace_time::zonedbx::kValidationDataKirov);
}
testF(TransitionTest, Knox) {
  assertValid(&ace_time::zonedbx::kValidationDataKnox);
}
testF(TransitionTest, Kolkata) {
  assertValid(&ace_time::zonedbx::kValidationDataKolkata);
}
testF(TransitionTest, Kosrae) {
  assertValid(&ace_time::zonedbx::kValidationDataKosrae);
}
testF(TransitionTest, Krasnoyarsk) {
  assertValid(&ace_time::zonedbx::kValidationDataKrasnoyarsk);
}
testF(TransitionTest, Kuala_Lumpur) {
  assertValid(&ace_time::zonedbx::kValidationDataKuala_Lumpur);
}
testF(TransitionTest, Kuching) {
  assertValid(&ace_time::zonedbx::kValidationDataKuching);
}
testF(TransitionTest, Kwajalein) {
  assertValid(&ace_time::zonedbx::kValidationDataKwajalein);
}
testF(TransitionTest, La_Paz) {
  assertValid(&ace_time::zonedbx::kValidationDataLa_Paz);
}
testF(TransitionTest, La_Rioja) {
  assertValid(&ace_time::zonedbx::kValidationDataLa_Rioja);
}
testF(TransitionTest, Lagos) {
  assertValid(&ace_time::zonedbx::kValidationDataLagos);
}
testF(TransitionTest, Lima) {
  assertValid(&ace_time::zonedbx::kValidationDataLima);
}
testF(TransitionTest, Lindeman) {
  assertValid(&ace_time::zonedbx::kValidationDataLindeman);
}
testF(TransitionTest, Lisbon) {
  assertValid(&ace_time::zonedbx::kValidationDataLisbon);
}
testF(TransitionTest, London) {
  assertValid(&ace_time::zonedbx::kValidationDataLondon);
}
testF(TransitionTest, Lord_Howe) {
  assertValid(&ace_time::zonedbx::kValidationDataLord_Howe);
}
testF(TransitionTest, Los_Angeles) {
  assertValid(&ace_time::zonedbx::kValidationDataLos_Angeles);
}
testF(TransitionTest, Louisville) {
  assertValid(&ace_time::zonedbx::kValidationDataLouisville);
}
testF(TransitionTest, Luxembourg) {
  assertValid(&ace_time::zonedbx::kValidationDataLuxembourg);
}
testF(TransitionTest, Macau) {
  assertValid(&ace_time::zonedbx::kValidationDataMacau);
}
testF(TransitionTest, Maceio) {
  assertValid(&ace_time::zonedbx::kValidationDataMaceio);
}
testF(TransitionTest, Macquarie) {
  assertValid(&ace_time::zonedbx::kValidationDataMacquarie);
}
testF(TransitionTest, Madeira) {
  assertValid(&ace_time::zonedbx::kValidationDataMadeira);
}
testF(TransitionTest, Madrid) {
  assertValid(&ace_time::zonedbx::kValidationDataMadrid);
}
testF(TransitionTest, Magadan) {
  assertValid(&ace_time::zonedbx::kValidationDataMagadan);
}
testF(TransitionTest, Mahe) {
  assertValid(&ace_time::zonedbx::kValidationDataMahe);
}
testF(TransitionTest, Majuro) {
  assertValid(&ace_time::zonedbx::kValidationDataMajuro);
}
testF(TransitionTest, Makassar) {
  assertValid(&ace_time::zonedbx::kValidationDataMakassar);
}
testF(TransitionTest, Maldives) {
  assertValid(&ace_time::zonedbx::kValidationDataMaldives);
}
testF(TransitionTest, Malta) {
  assertValid(&ace_time::zonedbx::kValidationDataMalta);
}
testF(TransitionTest, Managua) {
  assertValid(&ace_time::zonedbx::kValidationDataManagua);
}
testF(TransitionTest, Manaus) {
  assertValid(&ace_time::zonedbx::kValidationDataManaus);
}
testF(TransitionTest, Manila) {
  assertValid(&ace_time::zonedbx::kValidationDataManila);
}
testF(TransitionTest, Maputo) {
  assertValid(&ace_time::zonedbx::kValidationDataMaputo);
}
testF(TransitionTest, Marengo) {
  assertValid(&ace_time::zonedbx::kValidationDataMarengo);
}
testF(TransitionTest, Marquesas) {
  assertValid(&ace_time::zonedbx::kValidationDataMarquesas);
}
testF(TransitionTest, Martinique) {
  assertValid(&ace_time::zonedbx::kValidationDataMartinique);
}
testF(TransitionTest, Matamoros) {
  assertValid(&ace_time::zonedbx::kValidationDataMatamoros);
}
testF(TransitionTest, Mauritius) {
  assertValid(&ace_time::zonedbx::kValidationDataMauritius);
}
testF(TransitionTest, Mawson) {
  assertValid(&ace_time::zonedbx::kValidationDataMawson);
}
testF(TransitionTest, Mazatlan) {
  assertValid(&ace_time::zonedbx::kValidationDataMazatlan);
}
testF(TransitionTest, Melbourne) {
  assertValid(&ace_time::zonedbx::kValidationDataMelbourne);
}
testF(TransitionTest, Mendoza) {
  assertValid(&ace_time::zonedbx::kValidationDataMendoza);
}
testF(TransitionTest, Menominee) {
  assertValid(&ace_time::zonedbx::kValidationDataMenominee);
}
testF(TransitionTest, Merida) {
  assertValid(&ace_time::zonedbx::kValidationDataMerida);
}
testF(TransitionTest, Metlakatla) {
  assertValid(&ace_time::zonedbx::kValidationDataMetlakatla);
}
testF(TransitionTest, Mexico_City) {
  assertValid(&ace_time::zonedbx::kValidationDataMexico_City);
}
testF(TransitionTest, Minsk) {
  assertValid(&ace_time::zonedbx::kValidationDataMinsk);
}
testF(TransitionTest, Miquelon) {
  assertValid(&ace_time::zonedbx::kValidationDataMiquelon);
}
testF(TransitionTest, Monaco) {
  assertValid(&ace_time::zonedbx::kValidationDataMonaco);
}
//testF(TransitionTest, Moncton) {
//  assertValid(&ace_time::zonedbx::kValidationDataMoncton);
//}
testF(TransitionTest, Monrovia) {
  assertValid(&ace_time::zonedbx::kValidationDataMonrovia);
}
testF(TransitionTest, Monterrey) {
  assertValid(&ace_time::zonedbx::kValidationDataMonterrey);
}
testF(TransitionTest, Montevideo) {
  assertValid(&ace_time::zonedbx::kValidationDataMontevideo);
}
testF(TransitionTest, Monticello) {
  assertValid(&ace_time::zonedbx::kValidationDataMonticello);
}
testF(TransitionTest, Moscow) {
  assertValid(&ace_time::zonedbx::kValidationDataMoscow);
}
testF(TransitionTest, Nairobi) {
  assertValid(&ace_time::zonedbx::kValidationDataNairobi);
}
testF(TransitionTest, Nassau) {
  assertValid(&ace_time::zonedbx::kValidationDataNassau);
}
testF(TransitionTest, Nauru) {
  assertValid(&ace_time::zonedbx::kValidationDataNauru);
}
testF(TransitionTest, Ndjamena) {
  assertValid(&ace_time::zonedbx::kValidationDataNdjamena);
}
testF(TransitionTest, New_Salem) {
  assertValid(&ace_time::zonedbx::kValidationDataNew_Salem);
}
testF(TransitionTest, New_York) {
  assertValid(&ace_time::zonedbx::kValidationDataNew_York);
}
testF(TransitionTest, Nicosia) {
  assertValid(&ace_time::zonedbx::kValidationDataNicosia);
}
testF(TransitionTest, Nipigon) {
  assertValid(&ace_time::zonedbx::kValidationDataNipigon);
}
testF(TransitionTest, Niue) {
  assertValid(&ace_time::zonedbx::kValidationDataNiue);
}
testF(TransitionTest, Nome) {
  assertValid(&ace_time::zonedbx::kValidationDataNome);
}
testF(TransitionTest, Norfolk) {
  assertValid(&ace_time::zonedbx::kValidationDataNorfolk);
}
testF(TransitionTest, Noronha) {
  assertValid(&ace_time::zonedbx::kValidationDataNoronha);
}
testF(TransitionTest, Noumea) {
  assertValid(&ace_time::zonedbx::kValidationDataNoumea);
}
testF(TransitionTest, Novokuznetsk) {
  assertValid(&ace_time::zonedbx::kValidationDataNovokuznetsk);
}
testF(TransitionTest, Novosibirsk) {
  assertValid(&ace_time::zonedbx::kValidationDataNovosibirsk);
}
testF(TransitionTest, Ojinaga) {
  assertValid(&ace_time::zonedbx::kValidationDataOjinaga);
}
testF(TransitionTest, Omsk) {
  assertValid(&ace_time::zonedbx::kValidationDataOmsk);
}
testF(TransitionTest, Oral) {
  assertValid(&ace_time::zonedbx::kValidationDataOral);
}
testF(TransitionTest, Oslo) {
  assertValid(&ace_time::zonedbx::kValidationDataOslo);
}
testF(TransitionTest, Pago_Pago) {
  assertValid(&ace_time::zonedbx::kValidationDataPago_Pago);
}
testF(TransitionTest, Palau) {
  assertValid(&ace_time::zonedbx::kValidationDataPalau);
}
testF(TransitionTest, Palmer) {
  assertValid(&ace_time::zonedbx::kValidationDataPalmer);
}
testF(TransitionTest, Panama) {
  assertValid(&ace_time::zonedbx::kValidationDataPanama);
}
testF(TransitionTest, Pangnirtung) {
  assertValid(&ace_time::zonedbx::kValidationDataPangnirtung);
}
testF(TransitionTest, Paramaribo) {
  assertValid(&ace_time::zonedbx::kValidationDataParamaribo);
}
testF(TransitionTest, Paris) {
  assertValid(&ace_time::zonedbx::kValidationDataParis);
}
testF(TransitionTest, Perth) {
  assertValid(&ace_time::zonedbx::kValidationDataPerth);
}
testF(TransitionTest, Petersburg) {
  assertValid(&ace_time::zonedbx::kValidationDataPetersburg);
}
testF(TransitionTest, Phoenix) {
  assertValid(&ace_time::zonedbx::kValidationDataPhoenix);
}
testF(TransitionTest, Pitcairn) {
  assertValid(&ace_time::zonedbx::kValidationDataPitcairn);
}
testF(TransitionTest, Pohnpei) {
  assertValid(&ace_time::zonedbx::kValidationDataPohnpei);
}
testF(TransitionTest, Pontianak) {
  assertValid(&ace_time::zonedbx::kValidationDataPontianak);
}
testF(TransitionTest, Port_Moresby) {
  assertValid(&ace_time::zonedbx::kValidationDataPort_Moresby);
}
testF(TransitionTest, Port_au_Prince) {
  assertValid(&ace_time::zonedbx::kValidationDataPort_au_Prince);
}
testF(TransitionTest, Port_of_Spain) {
  assertValid(&ace_time::zonedbx::kValidationDataPort_of_Spain);
}
testF(TransitionTest, Porto_Velho) {
  assertValid(&ace_time::zonedbx::kValidationDataPorto_Velho);
}
testF(TransitionTest, Prague) {
  assertValid(&ace_time::zonedbx::kValidationDataPrague);
}
testF(TransitionTest, Puerto_Rico) {
  assertValid(&ace_time::zonedbx::kValidationDataPuerto_Rico);
}
testF(TransitionTest, Punta_Arenas) {
  assertValid(&ace_time::zonedbx::kValidationDataPunta_Arenas);
}
testF(TransitionTest, Pyongyang) {
  assertValid(&ace_time::zonedbx::kValidationDataPyongyang);
}
testF(TransitionTest, Qatar) {
  assertValid(&ace_time::zonedbx::kValidationDataQatar);
}
testF(TransitionTest, Qostanay) {
  assertValid(&ace_time::zonedbx::kValidationDataQostanay);
}
testF(TransitionTest, Qyzylorda) {
  assertValid(&ace_time::zonedbx::kValidationDataQyzylorda);
}
testF(TransitionTest, Rainy_River) {
  assertValid(&ace_time::zonedbx::kValidationDataRainy_River);
}
testF(TransitionTest, Rankin_Inlet) {
  assertValid(&ace_time::zonedbx::kValidationDataRankin_Inlet);
}
testF(TransitionTest, Rarotonga) {
  assertValid(&ace_time::zonedbx::kValidationDataRarotonga);
}
testF(TransitionTest, Recife) {
  assertValid(&ace_time::zonedbx::kValidationDataRecife);
}
testF(TransitionTest, Regina) {
  assertValid(&ace_time::zonedbx::kValidationDataRegina);
}
testF(TransitionTest, Resolute) {
  assertValid(&ace_time::zonedbx::kValidationDataResolute);
}
testF(TransitionTest, Reunion) {
  assertValid(&ace_time::zonedbx::kValidationDataReunion);
}
testF(TransitionTest, Reykjavik) {
  assertValid(&ace_time::zonedbx::kValidationDataReykjavik);
}
testF(TransitionTest, Riga) {
  assertValid(&ace_time::zonedbx::kValidationDataRiga);
}
testF(TransitionTest, Rio_Branco) {
  assertValid(&ace_time::zonedbx::kValidationDataRio_Branco);
}
testF(TransitionTest, Rio_Gallegos) {
  assertValid(&ace_time::zonedbx::kValidationDataRio_Gallegos);
}
testF(TransitionTest, Riyadh) {
  assertValid(&ace_time::zonedbx::kValidationDataRiyadh);
}
testF(TransitionTest, Rome) {
  assertValid(&ace_time::zonedbx::kValidationDataRome);
}
testF(TransitionTest, Rothera) {
  assertValid(&ace_time::zonedbx::kValidationDataRothera);
}
testF(TransitionTest, Sakhalin) {
  assertValid(&ace_time::zonedbx::kValidationDataSakhalin);
}
testF(TransitionTest, Salta) {
  assertValid(&ace_time::zonedbx::kValidationDataSalta);
}
testF(TransitionTest, Samara) {
  assertValid(&ace_time::zonedbx::kValidationDataSamara);
}
testF(TransitionTest, Samarkand) {
  assertValid(&ace_time::zonedbx::kValidationDataSamarkand);
}
testF(TransitionTest, San_Juan) {
  assertValid(&ace_time::zonedbx::kValidationDataSan_Juan);
}
testF(TransitionTest, San_Luis) {
  assertValid(&ace_time::zonedbx::kValidationDataSan_Luis);
}
testF(TransitionTest, Santarem) {
  assertValid(&ace_time::zonedbx::kValidationDataSantarem);
}
testF(TransitionTest, Santiago) {
  assertValid(&ace_time::zonedbx::kValidationDataSantiago);
}
testF(TransitionTest, Santo_Domingo) {
  assertValid(&ace_time::zonedbx::kValidationDataSanto_Domingo);
}
testF(TransitionTest, Sao_Paulo) {
  assertValid(&ace_time::zonedbx::kValidationDataSao_Paulo);
}
testF(TransitionTest, Sao_Tome) {
  assertValid(&ace_time::zonedbx::kValidationDataSao_Tome);
}
testF(TransitionTest, Saratov) {
  assertValid(&ace_time::zonedbx::kValidationDataSaratov);
}
testF(TransitionTest, Scoresbysund) {
  assertValid(&ace_time::zonedbx::kValidationDataScoresbysund);
}
testF(TransitionTest, Seoul) {
  assertValid(&ace_time::zonedbx::kValidationDataSeoul);
}
testF(TransitionTest, Shanghai) {
  assertValid(&ace_time::zonedbx::kValidationDataShanghai);
}
testF(TransitionTest, Simferopol) {
  assertValid(&ace_time::zonedbx::kValidationDataSimferopol);
}
testF(TransitionTest, Singapore) {
  assertValid(&ace_time::zonedbx::kValidationDataSingapore);
}
testF(TransitionTest, Sitka) {
  assertValid(&ace_time::zonedbx::kValidationDataSitka);
}
testF(TransitionTest, Sofia) {
  assertValid(&ace_time::zonedbx::kValidationDataSofia);
}
testF(TransitionTest, South_Georgia) {
  assertValid(&ace_time::zonedbx::kValidationDataSouth_Georgia);
}
testF(TransitionTest, Srednekolymsk) {
  assertValid(&ace_time::zonedbx::kValidationDataSrednekolymsk);
}
testF(TransitionTest, St_Johns) {
  assertValid(&ace_time::zonedbx::kValidationDataSt_Johns);
}
testF(TransitionTest, Stanley) {
  assertValid(&ace_time::zonedbx::kValidationDataStanley);
}
testF(TransitionTest, Stockholm) {
  assertValid(&ace_time::zonedbx::kValidationDataStockholm);
}
testF(TransitionTest, Swift_Current) {
  assertValid(&ace_time::zonedbx::kValidationDataSwift_Current);
}
testF(TransitionTest, Sydney) {
  assertValid(&ace_time::zonedbx::kValidationDataSydney);
}
testF(TransitionTest, Syowa) {
  assertValid(&ace_time::zonedbx::kValidationDataSyowa);
}
testF(TransitionTest, Tahiti) {
  assertValid(&ace_time::zonedbx::kValidationDataTahiti);
}
testF(TransitionTest, Taipei) {
  assertValid(&ace_time::zonedbx::kValidationDataTaipei);
}
testF(TransitionTest, Tallinn) {
  assertValid(&ace_time::zonedbx::kValidationDataTallinn);
}
testF(TransitionTest, Tarawa) {
  assertValid(&ace_time::zonedbx::kValidationDataTarawa);
}
testF(TransitionTest, Tashkent) {
  assertValid(&ace_time::zonedbx::kValidationDataTashkent);
}
testF(TransitionTest, Tbilisi) {
  assertValid(&ace_time::zonedbx::kValidationDataTbilisi);
}
testF(TransitionTest, Tegucigalpa) {
  assertValid(&ace_time::zonedbx::kValidationDataTegucigalpa);
}
//testF(TransitionTest, Tehran) {
//  assertValid(&ace_time::zonedbx::kValidationDataTehran);
//}
testF(TransitionTest, Tell_City) {
  assertValid(&ace_time::zonedbx::kValidationDataTell_City);
}
testF(TransitionTest, Thimphu) {
  assertValid(&ace_time::zonedbx::kValidationDataThimphu);
}
testF(TransitionTest, Thule) {
  assertValid(&ace_time::zonedbx::kValidationDataThule);
}
testF(TransitionTest, Thunder_Bay) {
  assertValid(&ace_time::zonedbx::kValidationDataThunder_Bay);
}
testF(TransitionTest, Tijuana) {
  assertValid(&ace_time::zonedbx::kValidationDataTijuana);
}
testF(TransitionTest, Tirane) {
  assertValid(&ace_time::zonedbx::kValidationDataTirane);
}
testF(TransitionTest, Tokyo) {
  assertValid(&ace_time::zonedbx::kValidationDataTokyo);
}
testF(TransitionTest, Tomsk) {
  assertValid(&ace_time::zonedbx::kValidationDataTomsk);
}
testF(TransitionTest, Tongatapu) {
  assertValid(&ace_time::zonedbx::kValidationDataTongatapu);
}
testF(TransitionTest, Toronto) {
  assertValid(&ace_time::zonedbx::kValidationDataToronto);
}
testF(TransitionTest, Tripoli) {
  assertValid(&ace_time::zonedbx::kValidationDataTripoli);
}
testF(TransitionTest, Troll) {
  assertValid(&ace_time::zonedbx::kValidationDataTroll);
}
testF(TransitionTest, Tucuman) {
  assertValid(&ace_time::zonedbx::kValidationDataTucuman);
}
testF(TransitionTest, Tunis) {
  assertValid(&ace_time::zonedbx::kValidationDataTunis);
}
testF(TransitionTest, Ulaanbaatar) {
  assertValid(&ace_time::zonedbx::kValidationDataUlaanbaatar);
}
testF(TransitionTest, Ulyanovsk) {
  assertValid(&ace_time::zonedbx::kValidationDataUlyanovsk);
}
testF(TransitionTest, Urumqi) {
  assertValid(&ace_time::zonedbx::kValidationDataUrumqi);
}
testF(TransitionTest, Ushuaia) {
  assertValid(&ace_time::zonedbx::kValidationDataUshuaia);
}
testF(TransitionTest, Ust_Nera) {
  assertValid(&ace_time::zonedbx::kValidationDataUst_Nera);
}
testF(TransitionTest, Uzhgorod) {
  assertValid(&ace_time::zonedbx::kValidationDataUzhgorod);
}
testF(TransitionTest, Vancouver) {
  assertValid(&ace_time::zonedbx::kValidationDataVancouver);
}
testF(TransitionTest, Vevay) {
  assertValid(&ace_time::zonedbx::kValidationDataVevay);
}
testF(TransitionTest, Vienna) {
  assertValid(&ace_time::zonedbx::kValidationDataVienna);
}
testF(TransitionTest, Vilnius) {
  assertValid(&ace_time::zonedbx::kValidationDataVilnius);
}
testF(TransitionTest, Vincennes) {
  assertValid(&ace_time::zonedbx::kValidationDataVincennes);
}
testF(TransitionTest, Vladivostok) {
  assertValid(&ace_time::zonedbx::kValidationDataVladivostok);
}
testF(TransitionTest, Volgograd) {
  assertValid(&ace_time::zonedbx::kValidationDataVolgograd);
}
testF(TransitionTest, Vostok) {
  assertValid(&ace_time::zonedbx::kValidationDataVostok);
}
testF(TransitionTest, Wake) {
  assertValid(&ace_time::zonedbx::kValidationDataWake);
}
testF(TransitionTest, Wallis) {
  assertValid(&ace_time::zonedbx::kValidationDataWallis);
}
testF(TransitionTest, Warsaw) {
  assertValid(&ace_time::zonedbx::kValidationDataWarsaw);
}
testF(TransitionTest, Whitehorse) {
  assertValid(&ace_time::zonedbx::kValidationDataWhitehorse);
}
testF(TransitionTest, Winamac) {
  assertValid(&ace_time::zonedbx::kValidationDataWinamac);
}
testF(TransitionTest, Windhoek) {
  assertValid(&ace_time::zonedbx::kValidationDataWindhoek);
}
testF(TransitionTest, Winnipeg) {
  assertValid(&ace_time::zonedbx::kValidationDataWinnipeg);
}
testF(TransitionTest, Yakutat) {
  assertValid(&ace_time::zonedbx::kValidationDataYakutat);
}
testF(TransitionTest, Yakutsk) {
  assertValid(&ace_time::zonedbx::kValidationDataYakutsk);
}
testF(TransitionTest, Yangon) {
  assertValid(&ace_time::zonedbx::kValidationDataYangon);
}
testF(TransitionTest, Yekaterinburg) {
  assertValid(&ace_time::zonedbx::kValidationDataYekaterinburg);
}
testF(TransitionTest, Yellowknife) {
  assertValid(&ace_time::zonedbx::kValidationDataYellowknife);
}
testF(TransitionTest, Yerevan) {
  assertValid(&ace_time::zonedbx::kValidationDataYerevan);
}
testF(TransitionTest, Zaporozhye) {
  assertValid(&ace_time::zonedbx::kValidationDataZaporozhye);
}
testF(TransitionTest, Zurich) {
  assertValid(&ace_time::zonedbx::kValidationDataZurich);
}

